/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/experiments/geometry-vertices/index.js":
/*!****************************************************!*\
  !*** ./src/experiments/geometry-vertices/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_fonts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../modules/fonts */ \"./src/modules/fonts/index.js\");\n\nvar SCREEN_WIDTH = window.innerWidth;\nvar SCREEN_HEIGHT = window.innerHeight;\nvar VIEW_ANGLE = 45;\nvar ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT;\nvar NEAR = 1;\nvar FAR = 10000;\nvar scene;\nvar camera;\nvar renderer;\nvar axisHelper;\nvar gridHelper;\nvar controls;\nvar pointLight;\nvar ambientLight;\nvar fonts;\nvar box;\nvar origin = new THREE.Vector3(0, 0, 0);\nfunction load() {\n    return (0,_modules_fonts__WEBPACK_IMPORTED_MODULE_0__.loadFonts)().then(function(theFonts) {\n        fonts = theFonts;\n    });\n}\nfunction VerticesAnimation(geometry) {\n    this.geometry = geometry;\n    this.original = geometry.clone();\n    this.vertexIndex = 0;\n    this.theta = 0;\n}\nVerticesAnimation.prototype = {\n    update: function update() {\n        this.theta += 0.1;\n        if (this.theta > Math.PI) {\n            this.theta = 0;\n            this.vertexIndex = (this.vertexIndex + 1) % this.geometry.vertices.length;\n        }\n        var orig = this.original.vertices[this.vertexIndex];\n        var curr = this.geometry.vertices[this.vertexIndex];\n        var delta = Math.sin(this.theta);\n        curr.x = orig.x + orig.x * delta;\n        curr.y = orig.y + orig.y * delta;\n        curr.z = orig.z + orig.z * delta;\n        this.geometry.verticesNeedUpdate = true;\n    }\n};\nfunction AnimatedBoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n    THREE.BoxGeometry.call(this, width, height, depth, widthSegments, heightSegments, depthSegments);\n    this.animation = new VerticesAnimation(this);\n}\nAnimatedBoxGeometry.prototype = Object.assign(Object.create(THREE.BoxGeometry.prototype), {\n    constructor: AnimatedBoxGeometry,\n    update: function update() {\n        this.animation.update();\n    }\n});\nfunction Label(text) {\n    var params = {\n        font: fonts.helvetiker_regular,\n        size: 5,\n        height: 1\n    };\n    var geometry = new THREE.TextGeometry(text, params);\n    var material = new THREE.MeshNormalMaterial();\n    THREE.Mesh.call(this, geometry, material);\n}\nLabel.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {\n    constructor: Label\n});\nfunction AnimatedBox(size, _camera) {\n    this.camera = _camera;\n    this.geometry = new AnimatedBoxGeometry(size, size, size);\n    this.material = new THREE.MeshNormalMaterial({\n        wireframe: true\n    });\n    THREE.Mesh.call(this, this.geometry, this.material);\n    var vertices = this.geometry.vertices;\n    this.labels = [];\n    for(var i = 0; i < vertices.length; i += 1){\n        var label = new Label(String(i));\n        label.position.copy(vertices[i]);\n        this.labels.push(label);\n        this.add(label);\n    }\n}\nAnimatedBox.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {\n    constructor: AnimatedBox,\n    update: function update() {\n        this.geometry.update();\n        for(var i = 0; i < this.geometry.vertices.length; i += 1){\n            this.labels[i].position.copy(this.geometry.vertices[i]);\n            this.labels[i].lookAt(this.camera.position);\n        }\n    }\n});\nfunction init() {\n    camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\n    camera.position.set(100, 120, 140);\n    camera.lookAt(origin);\n    scene = new THREE.Scene();\n    gridHelper = new THREE.GridHelper(100, 10);\n    scene.add(gridHelper);\n    axisHelper = new THREE.AxisHelper(100);\n    scene.add(axisHelper);\n    box = new AnimatedBox(50, camera);\n    scene.add(box);\n    // vertices\n    //\n    // [\n    //   {\"x\":5,\"y\":5,\"z\":5},       // 0\n    //   {\"x\":5,\"y\":5,\"z\":-5},      // 1\n    //   {\"x\":5,\"y\":-5,\"z\":5},      // 2\n    //   {\"x\":5,\"y\":-5,\"z\":-5},     // 3\n    //   {\"x\":-5,\"y\":5,\"z\":-5},     // 4\n    //   {\"x\":-5,\"y\":5,\"z\":5},      // 5\n    //   {\"x\":-5,\"y\":-5,\"z\":-5},    // 6\n    //   {\"x\":-5,\"y\":-5,\"z\":5},     // 7\n    // ]\n    //\n    // Faces\n    //\n    // [{\n    //     \"a\": 0,                  // {\"x\":5,\"y\":5,\"z\":5}\n    //     \"b\": 2,                  // {\"x\":5,\"y\":-5,\"z\":5}\n    //     \"c\": 1,                  // {\"x\":5,\"y\":5,\"z\":-5}\n    //     \"normal\": {\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //      }, {\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 0\n    // }, {\n    //     \"a\": 2,\n    //     \"b\": 3,\n    //     \"c\": 1,\n    //     \"normal\": {\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 0\n    // }, {\n    //     \"a\": 4,\n    //     \"b\": 6,\n    //     \"c\": 5,\n    //     \"normal\": {\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 1\n    // }, {\n    //     \"a\": 6,\n    //     \"b\": 7,\n    //     \"c\": 5,\n    //     \"normal\": {\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": -1,\n    //         \"y\": 0,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 1\n    // }, {\n    //     \"a\": 4,\n    //     \"b\": 5,\n    //     \"c\": 1,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 2\n    // }, {\n    //     \"a\": 5,\n    //     \"b\": 0,\n    //     \"c\": 1,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 1,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 2\n    // }, {\n    //     \"a\": 7,\n    //     \"b\": 6,\n    //     \"c\": 2,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 3\n    // }, {\n    //     \"a\": 6,\n    //     \"b\": 3,\n    //     \"c\": 2,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": -1,\n    //         \"z\": 0\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 3\n    // }, {\n    //     \"a\": 5,\n    //     \"b\": 7,\n    //     \"c\": 0,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 4\n    // }, {\n    //     \"a\": 7,\n    //     \"b\": 2,\n    //     \"c\": 0,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": 1\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 4\n    // }, {\n    //     \"a\": 1,\n    //     \"b\": 3,\n    //     \"c\": 4,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 5\n    // }, {\n    //     \"a\": 3,\n    //     \"b\": 6,\n    //     \"c\": 4,\n    //     \"normal\": {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     },\n    //     \"vertexNormals\": [{\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     }, {\n    //         \"x\": 0,\n    //         \"y\": 0,\n    //         \"z\": -1\n    //     }],\n    //     \"color\": 16777215,\n    //     \"vertexColors\": [],\n    //     \"materialIndex\": 5\n    // }]\n    //\n    // faceVertexUvs\n    //\n    // [\n    //     [\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 1\n    //         }, {\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 1\n    //         }, {\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 1\n    //         }, {\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 1\n    //         }, {\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 1\n    //         }, {\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 1\n    //         }, {\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }],\n    //         [{\n    //             \"x\": 0,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 0\n    //         }, {\n    //             \"x\": 1,\n    //             \"y\": 1\n    //         }]\n    //     ]\n    // ]\n    ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    pointLight = new THREE.PointLight(0xffffff, 1, 1000);\n    pointLight.position.set(50, 50, 50);\n    scene.add(pointLight);\n    renderer = new THREE.WebGLRenderer({\n        antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    controls = new THREE.OrbitControls(camera, renderer.domElement);\n    THREEx.WindowResize(renderer, camera);\n    document.body.appendChild(renderer.domElement);\n}\nfunction update() {\n    box.update();\n    controls.update();\n}\nfunction animate() {\n    requestAnimationFrame(animate);\n    update();\n    renderer.render(scene, camera);\n}\nload().then(function() {\n    init();\n    animate();\n});\n\n\n//# sourceURL=webpack://three-experiments/./src/experiments/geometry-vertices/index.js?");

/***/ }),

/***/ "./src/modules/fonts/index.js":
/*!************************************!*\
  !*** ./src/modules/fonts/index.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loadFont\": () => (/* binding */ loadFont),\n/* harmony export */   \"loadFonts\": () => (/* binding */ loadFonts)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpreadProps(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nvar fontLoader = new THREE.FontLoader();\nvar fonts = [\n    \"gentilis_bold\",\n    \"gentilis_regular\",\n    \"helvetiker_bold\",\n    \"helvetiker_regular\",\n    \"optimer_bold\",\n    \"optimer_regular\", \n];\nfunction loadFont(url) {\n    return new Promise(function(resolve) {\n        fontLoader.load(url, resolve);\n    });\n}\nfunction loadFonts() {\n    var promises = fonts.map(function(id) {\n        var url = \"../../modules/fonts/fonts/\".concat(id, \".typeface.json\");\n        return loadFont(url).then(function(font) {\n            return {\n                id: id,\n                font: font\n            };\n        });\n    });\n    return Promise.all(promises).then(function(results) {\n        var map = results.reduce(function(acc, result) {\n            return _objectSpreadProps(_objectSpread({}, acc), _defineProperty({}, result.id, result.font));\n        }, {});\n        return map;\n    });\n}\n\n\n//# sourceURL=webpack://three-experiments/./src/modules/fonts/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/experiments/geometry-vertices/index.js");
/******/ 	
/******/ })()
;