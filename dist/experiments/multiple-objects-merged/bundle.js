/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/experiments/multiple-objects-merged/index.js":
/*!**********************************************************!*\
  !*** ./src/experiments/multiple-objects-merged/index.js ***!
  \**********************************************************/
/***/ (() => {

eval("function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar SCREEN_WIDTH = window.innerWidth;\nvar SCREEN_HEIGHT = window.innerHeight;\nvar VIEW_ANGLE = 45;\nvar ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT;\nvar NEAR = 1;\nvar FAR = 10000;\nvar scene;\nvar camera;\nvar renderer;\nvar axisHelper;\nvar gridHelper;\nvar thing;\nvar controls;\nvar pointLight;\nvar ambientLight;\nvar origin = new THREE.Vector3(0, 0, 0);\nfunction init() {\n    scene = new THREE.Scene();\n    gridHelper = new THREE.GridHelper(100, 10);\n    scene.add(gridHelper);\n    axisHelper = new THREE.AxisHelper(100);\n    scene.add(axisHelper);\n    camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\n    camera.position.set(100, 100, 100);\n    camera.lookAt(origin);\n    // Create an empty geometry to contain all of our joined geometries\n    var thingGeometry = new THREE.Geometry();\n    // Set the box size\n    var size = 30;\n    // Set the \"normalised\" box positions\n    // This is nothing to do with the joining,\n    // it just specifies the relative positions of the boxes\n    var positions = [\n        [\n            0,\n            0,\n            -1\n        ],\n        [\n            0,\n            -1,\n            0\n        ],\n        [\n            0,\n            0,\n            1\n        ],\n        [\n            -1,\n            0,\n            0\n        ],\n        [\n            0,\n            1,\n            0\n        ],\n        [\n            1,\n            0,\n            0\n        ], \n    ];\n    positions.forEach(function(param, index) {\n        var _param = _slicedToArray(param, 3), x0 = _param[0], y0 = _param[1], z0 = _param[2];\n        // Create a geometry for the child part\n        var geometry = index % 2 ? new THREE.BoxGeometry(size, size, size) : new THREE.SphereGeometry(size / 2, 32, 32);\n        // Create a translation matrix that moves the box into its relative position\n        var x = x0 * size;\n        var y = y0 * size;\n        var z = z0 * size;\n        var translation = new THREE.Matrix4().makeTranslation(x, y, z);\n        // Merge the geometry into the parent geometry\n        thingGeometry.merge(geometry, translation);\n    });\n    // Now we can render the merged geometry\n    var thingMaterial = new THREE.MeshNormalMaterial();\n    thing = new THREE.Mesh(thingGeometry, thingMaterial);\n    scene.add(thing);\n    ambientLight = new THREE.AmbientLight(0x444444);\n    scene.add(ambientLight);\n    pointLight = new THREE.PointLight(0xffffff, 2, 1000);\n    pointLight.position.set(100, 100, 100);\n    scene.add(pointLight);\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    controls = new THREE.OrbitControls(camera, renderer.domElement);\n    THREEx.WindowResize(renderer, camera);\n    document.body.appendChild(renderer.domElement);\n}\nfunction update() {\n    thing.rotation.x += 0.01;\n    thing.rotation.y += 0.01;\n    thing.rotation.z += 0.01;\n    controls.update();\n}\nfunction animate() {\n    requestAnimationFrame(animate);\n    update();\n    renderer.render(scene, camera);\n}\ninit();\nanimate();\n\n\n//# sourceURL=webpack://three-experiments/./src/experiments/multiple-objects-merged/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/experiments/multiple-objects-merged/index.js"]();
/******/ 	
/******/ })()
;